@page "/add-warehouse"
@inject HttpClient Http
@inject NavigationManager UriHelper


<h3>Add Warehouse</h3>
<EditForm Model="@warehouse">
    <DataAnnotationsValidator/>
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Add the Warehouse Credentials</h5>
            <div class="form-group row">
                <label class="col-sm-4 col-form-label">Name</label>
                <div class="col-sm-8">
                    <InputText id="name" class="form-control" placeholder="Warehouse Name" @bind-Value="@warehouse.Name" />
                    <ValidationMessage For="@(() => warehouse.Name)" />
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-4 col-form-label">Company Name</label>
                <div class="col-sm-8">
                    <!--<select class="form-control" @onchange="SelectCompany" @onclick="IsSelecting">-->
                    <select class="form-control" @onchange="SelectCompany">
                        <option value=0>Choose</option>
                        @if (companies == null)
                        {
                            <p>companies null</p>
                        }
                        else
                        {
                            @foreach (var company in companies)
                            {
                                <option value=@company.Id>@company.Name</option>
                            }
                        }
                    </select>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-8">
                    <button @onclick=@CreateWarehouse type="submit" class="btn btn-primary">Save Warehouse</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>


@code {
    public Warehouse warehouse = new Warehouse();

    //variables for binding
    public string companyIdString = "";
    public int companyId = 0;
    public void SelectCompany(ChangeEventArgs e)
    {
        companyIdString = e.Value.ToString();
        companyId = Int32.Parse(companyIdString);
    }

    public void CreateWarehouse()
    {
        warehouse.CompanyId = companyId;
        Http.PostAsJsonAsync("api/warehouses", warehouse);
        Trigger();
        StateHasChanged();
        UriHelper.NavigateTo("warehouses");
    }
    
    [Parameter]
    public EventCallback<bool> IsCreate { get; set; }

    public void Trigger()
    {
        IsCreate.InvokeAsync(false);
    }

    public List<Company> companies;
    protected override async Task OnInitializedAsync()
    {
        companies = await Http.GetFromJsonAsync<List<Company>>("api/CompanyInformations");
    }
}